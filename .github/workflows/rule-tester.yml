# To run manually from a non-main branch, install gh cli locally and run:
# gh workflow run "Deploy Azure Rule Tester Endpoint" --ref <branch-name>
name: Deploy Azure Rule Tester Endpoint
on:
  push:
    branches:
      - main
  workflow_dispatch:
env:
  creds: '{"clientId":"${{ vars.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ vars.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ vars.AZURE_TENANT_ID }}"}'
  functionAppName: cdisc-library-conformance-rules-generator
jobs:
  Build_Stage_Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install application dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements-rule-tester.txt
        shell: bash
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          path: |
            . 
            !venv/
          name: python-app
  deploy_to_dev_Stage_DeploymentJob:
    runs-on: ubuntu-latest
    needs:
      - Build_Stage_Build
    environment:
      name: cdisc-library-conformance-rules-generator-dev
    if: success()
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.creds }}
      - name: Azure functions app deploy
        uses: Azure/webapps-deploy@v2
        with:
          app-name: ${{ env.functionAppName }}-dev
