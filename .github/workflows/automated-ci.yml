# This workflow will create venv, install requirements & run pytest.
# The purpose is to run unit tests automatically when we push a new to commit to a remote branch.

name: CI

# Controls when the workflow will run
on: [ push, pull_request ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Installing all dependencies
      - name: Install requirements
        run: |
          pip install -r requirements.txt

      # running the tests
      - name: Running Tests
        run: |
          python -m pytest tests/unit/

  # get changes on pull request
  changed_files:
      if: ${{ github.event.pull_request}}
      runs-on: ubuntu-latest
      # Map a step output to a job output
      outputs:
        all: ${{ steps.changes.outputs.all}}
        py: ${{ steps.changes.outputs.py }}
      steps:
          # Make sure we have some code to diff.
        - name: Checkout repository
          uses: actions/checkout@v3
          with:
            fetch-depth: '0'
        - name: Get changed files
          id: changes
          # Set outputs using the command.
          run: |
            echo ${{ github.event.pull_request.base.sha }}
            echo ${{ github.sha }}
            echo "::set-output name=all::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} | xargs)"
            echo "::set-output name=py::$(git diff --name-only --diff-filter=ACMRT ${{ github.base_ref }} | grep .py$ | xargs)"

  lint:
      runs-on: ubuntu-latest
      # require the first job to have run
      needs: changed_files
      # only run there are changed files
      if: ${{needs.changed_files.outputs.py}}.length -gt 0
      steps:
        - name: echo changed files
          run: |
            echo ${{needs.changed_files.outputs.py2}}
            pip install flake8
            echo ${{needs.changed_files.outputs.py}}
            flake8 ${{needs.changed_files.outputs.py}} --count --select=E9,F63,F7,F82 --show-source --statistics
            flake8 ${{needs.changed_files.outputs.py}} --count --exit-zero --statistics
