name: Upload Python Package to PyPi

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        id: pysetup
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install -r requirements.txt
      - name: Build Binary
        run: pyinstaller core.py --dist ./dist/output/linux --add-data=$pythonLocation/lib/python3.9/site-packages/xmlschema/schemas:xmlschema/schemas --add-data=resources/cache:resources/cache --add-data=resources/templates:resources/templates
      - name: Archive Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "core-linux"
          path: dist/output/linux
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        id: pysetup
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install -r requirements.txt
      - name: Build Binary
        run: pyinstaller core.py --dist ./dist/output/windows --add-data=$pythonLocation/Lib/site-packages/xmlschema/schemas:xmlschema/schemas --add-data=resources/cache:resources/cache --add-data=resources/templates:resources/templates
      - name: Archive Windows Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: "core-windows"
          path: dist/output/windows
  deploy-package:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
          pip install -r requirements.txt
      - name: Publish
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/* --skip-existing
  deploy-artifacts:
      runs-on: ubuntu-latest
      needs: [build-linux, build-windows]
      steps:
      - name: Release
        uses: softprops/action-gh-release@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            core-linux.zip
            core-windows.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
