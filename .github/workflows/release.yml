name: Release CORE Rules Engine

on:
  release:
    types: [created]

jobs:
  build-binaries:
    strategy:
      matrix:
        include:
          - os: "ubuntu-latest"
            name: "core-ubuntu-latest"
          - os: "macos-latest"
            name: "core-mac"
          - os: "windows-latest"
            name: "core-windows"
    uses: ./.github/workflows/build-binary.yml
    with:
      os: ${{ matrix.os }}
      name: ${{ matrix.name }}

  create-release-assets:
    needs: build-binaries
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create release zip files
        uses: vimtor/action-zip@v1
        with:
          files: artifacts/core-ubuntu-latest/
          dest: core-ubuntu-latest.zip
      - uses: vimtor/action-zip@v1
        with:
          files: artifacts/core-mac/
          dest: core-mac.zip
      - uses: vimtor/action-zip@v1
        with:
          files: artifacts/core-windows/
          dest: core-windows.zip

      - name: Upload Ubuntu Latest Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./core-ubuntu-latest.zip
          asset_name: core-ubuntu-latest.zip
          asset_content_type: application/zip
      - name: Upload Mac Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./core-mac.zip
          asset_name: core-mac.zip
          asset_content_type: application/zip
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./core-windows.zip
          asset_name: core-windows.zip
          asset_content_type: application/zip

      # Upload zips as artifact for the PyPI job
      - name: Upload Release Assets for PyPI
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            core-ubuntu-latest.zip
            core-mac.zip
            core-windows.zip
  deploy-PyPi:
    needs: create-release-assets
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build setuptools wheel twine
          pip install -r requirements.txt
      - name: Build package
        run: |
          python -m build
      - name: Check package size
        run: |
          echo "Package size:"
          ls -lh dist/*.whl
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
