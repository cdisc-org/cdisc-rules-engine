# This workflow will create venv, install requirements & run pytest.
# The purpose is to run unit tests automatically when we push a new to commit to a remote branch.

name: CI

# Controls when the workflow will run
on: [pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      # Installing all dependencies
      - name: Install requirements
        run: |
          pip install -r requirements.txt

      # running the tests
      - name: Running Tests
        run: |
          python -m pytest tests/unit/ --cov=cdisc_rules_engine --cov-fail-under=75
          python -m pytest tests/QARegressionTests/

  get_changed_files:
    runs-on: ubuntu-latest
    outputs:
      py: ${{ steps.changes.outputs.py }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Get changed files
        id: changes
        run: |
          echo "::set-output name=py::$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} | grep .py$ | xargs)"

  lint:
    runs-on: ubuntu-latest
    needs: get_changed_files
    # only run there are changed files
    if: ${{needs.get_changed_files.outputs.py}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: "0"
      - name: Install linters
        run: |
          pip install flake8==5.0.4
          pip install black==22.6.0

      - name: Run flake8
        run: |
          flake8 ${{needs.get_changed_files.outputs.py}} --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 ${{needs.get_changed_files.outputs.py}} --ignore E203,W503 --count --statistics

      - name: Run black
        run: |
          black --check ${{needs.get_changed_files.outputs.py}}
